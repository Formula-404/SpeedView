# Generated by Django 5.2.7 on 2025-10-17 11:47

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_number', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=60)),
                ('last_name', models.CharField(blank=True, max_length=60)),
                ('full_name', models.CharField(blank=True, max_length=120)),
                ('broadcast_name', models.CharField(blank=True, max_length=120)),
                ('name_acronym', models.CharField(blank=True, max_length=8)),
                ('country_code', models.CharField(blank=True, max_length=3)),
                ('headshot_url', models.URLField(blank=True)),
                ('meeting_key', models.IntegerField(blank=True, null=True)),
                ('session_key', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'driver',
                'ordering': ['driver_number'],
            },
        ),
        migrations.CreateModel(
            name='Laps',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meeting_key', models.IntegerField()),
                ('session_key', models.IntegerField()),
                ('date_start', models.DateTimeField()),
                ('lap_number', models.PositiveIntegerField()),
                ('duration_sector_1', models.DurationField(blank=True, null=True)),
                ('duration_sector_2', models.DurationField(blank=True, null=True)),
                ('duration_sector_3', models.DurationField(blank=True, null=True)),
                ('lap_duration', models.DurationField(blank=True, null=True)),
                ('i1_speed', models.FloatField(blank=True, null=True)),
                ('i2_speed', models.FloatField(blank=True, null=True)),
                ('st_speed', models.FloatField(blank=True, null=True)),
                ('segments_sector_1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('segments_sector_2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('segments_sector_3', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_out_lap', models.BooleanField(default=False)),
                ('is_pit_out_lap', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laps', to='main.driver')),
            ],
            options={
                'db_table': 'laps',
                'ordering': ['driver__driver_number', 'lap_number'],
                'constraints': [models.UniqueConstraint(fields=('driver', 'session_key', 'lap_number'), name='uniq_lap_per_driver_session')],
            },
        ),
        migrations.CreateModel(
            name='Pit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meeting_key', models.IntegerField()),
                ('session_key', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('lap_number', models.PositiveIntegerField()),
                ('pit_duration', models.DurationField(blank=True, null=True)),
                ('tire_in', models.CharField(blank=True, max_length=20)),
                ('tire_out', models.CharField(blank=True, max_length=20)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitstops', to='main.driver')),
            ],
            options={
                'db_table': 'pit',
                'ordering': ['driver__driver_number', 'lap_number'],
                'constraints': [models.UniqueConstraint(fields=('driver', 'session_key', 'lap_number'), name='uniq_pit_per_driver_session')],
            },
        ),
    ]
